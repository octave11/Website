// Recreating "Pyramidal landscape" by Ali Al Saqban (@WakeMeAtThree on Twitter)
// https://twitter.com/WakeMeAtThree/status/1001443202891730945

let upLeft   = { r: 123, g:  22, b:  46 };
let upRight  = { r: 214, g:  23, b:  68 };
let midLeft  = { r:   6, g: 168, b: 143 };
let midRight = { r:   9, g: 225, b: 184 };
let bottom   = { r:   0, g: 226, b: 209 };

function draw(e) {
	let time = -e * 0.002;
	
	let size = 24;
	let squash = sin(time * 0.4) * 0.8 + 1;
	let squashedSize = size * squash;
	
	let sideCount = 24;
	let sideCount_half = sideCount * 0.5;
	let iSideCount = 1 / sideCount;
	let count = sideCount * sideCount;
	let iCount = 1 / count;
	let maxHeight = 3;
	
	translate(
		-size * (sideCount - 0.5),
		-squashedSize * 0.5 / (maxHeight * 0.5) * (sideCount - 0.5)
	);
	
	for(let i = 0; i < count; i++) {
		let v = iToXY(i, sideCount);
		let { x, y } = v;
		let time_ = map(sin(time + v.add(0.5, 0.5).dist(sideCount_half, sideCount_half) * 0.3), -1, 1, 0, 1);
		let midPoint = 0.5;
		let t = map(time_, 0, midPoint, 0, 1);
		
		let h = lerp(-squashedSize, -size * maxHeight, t);
		
		let leftColors = [ bottom, midLeft ];
		let rightColors = [ bottom, midRight ];
		
		if(time_ >= midPoint) {
			leftColors = [ midLeft, upLeft ];
			rightColors = [ midRight, upRight ];
			t = map(time_, midPoint, 1, 0, 1);
		}
		
		push();
		
		translate((x + y % 2 * 0.5) * size * 2, y * squashedSize);
		
		beginPath();
		moveTo(-size, 0);
		lineTo(0, squashedSize);
		lineTo(0, h);
		fill(rgb(lerpRGB(leftColors[0], leftColors[1], t)));
		
		beginPath();
		moveTo(size, 0);
		lineTo(0, squashedSize);
		lineTo(0, h);
		fill(rgb(lerpRGB(rightColors[0], rightColors[1], t)));
		
		pop();
	}
}